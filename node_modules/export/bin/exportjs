#!/usr/bin/env node
var _ = require("underscore")
var Args = require("../lib/args")
var Export = require("../")
var Path = require("path")
var package = require("../package")

var app = new Args(Path.basename(__filename), {
  default: {
    usage: "COMMAND [OPTION]...",
    options: {help: Boolean},
    aliases: {h: "--help", "?": "--help"},

    help: [
      "Commands:",
      "  iffy  Wrap in an immediately-invoked function expression.",
      "  iife  Alias of iffy.",
      "",
      "Common Options:",
      "  -h, -?, --help  Display this help and exit.",
      "",
      "Use \"COMMAND --help\" for more information on a specific command.",
      "For more help or to give feedback, please email: " + package.author.email
    ]
  },

  iffy: {
    usage: "[OPTION]... FILE",
    options: {global: Boolean},
    aliases: {g: "--global"},

    help: [
      "Options:",
      '  -g, --global    Pass the global context in as "global" and "root".',
      "  -h, -?, --help  Display this help and exit."
    ]
  },
  iife: "iffy"
}).parse()

if (app.cmd == "help" || app.opts.help || !app.cmd) {
  if (app.cmd == "help") app.cmd = app.argv.shift()
  app.help()
  process.exit()
}

switch (app.cmd) {
  case "iffy":
    if (app.argv.length == 0) app.help(info), process.exit()
    if (app.argv.length != 1) die("Please pass a single file.")
    run(Export.Iffy, app.opts, app.argv[0])
    break

  default:
    die("Unrecognized command: " + app.cmd)
}

function run(klass, opts, file) {
  try {
    var output = new klass(opts).wrap(file)
    process.stdout.write(output)
  }
  catch (ex) {
    warn(package.name + ": " + ex)
    process.exit(1)
  }
}

function info(string) { process.stdout.write((string || "") + "\n") }
function warn(string) { process.stderr.write((string || "") + "\n") }

function die(string) { 
  warn(string)
  app.usage(warn)
  process.exit(1)
}
